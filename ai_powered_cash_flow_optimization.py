# -*- coding: utf-8 -*-
"""AI-Powered Cash Flow Optimization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FOgciSxwCvdtK1StWNsubdUg7D2eE9yD
"""

import streamlit as st
import pandas as pd
import pickle

# ---------------------------
# Load the trained model
# ---------------------------
model = pickle.load(open("model.pkl", "rb"))

st.title("üí∞ AI-Powered Cash Flow Optimization")
st.write("Upload your AR dataset (CSV) and get payment predictions with collection strategies.")

# ---------------------------
# Upload CSV
# ---------------------------
uploaded_file = st.file_uploader("üìÇ Upload AR Data (CSV)", type=["csv"])

if uploaded_file:
    # Read uploaded dataset
    df = pd.read_csv(uploaded_file)
    st.subheader("üìä Uploaded Data Preview")
    st.write(df.head())

    # ---------------------------
    # Select Features for Prediction
    # ---------------------------
    try:
        X = df[["Industry","Region","Invoice_Amount","Invoice_Month","Due_Month","Days_Past_Due"]]
    except:
        st.error("‚ùå Uploaded CSV must contain: Industry, Region, Invoice_Amount, Invoice_Month, Due_Month, Days_Past_Due")
        st.stop()

    # ---------------------------
    # Make Predictions
    # ---------------------------
    predictions = model.predict(X)
    df["Predicted_Status"] = ["Late" if p==1 else "On-Time" for p in predictions]

    # ---------------------------
    # Add Collection Strategy
    # ---------------------------
    def recommend_strategy(days_past_due):
        if days_past_due > 20:
            return "üö® High Risk - Send Early Reminder"
        elif days_past_due > 5:
            return "‚ö†Ô∏è Medium Risk - Standard Follow-Up"
        else:
            return "‚úÖ Low Risk - Regular Cycle"

    df["Collection_Strategy"] = df["Days_Past_Due"].apply(recommend_strategy)

    st.subheader("‚úÖ Predictions with Strategies")
    st.write(df[["Customer_ID","Predicted_Status","Collection_Strategy"]])

    # ---------------------------
    # Download Results
    # ---------------------------
    csv = df.to_csv(index=False).encode("utf-8")
    st.download_button(
        label="‚¨áÔ∏è Download Predictions as CSV",
        data=csv,
        file_name="predictions.csv",
        mime="text/csv"
    )

# ---------------------------
# Provide Sample Synthetic Data for Testing
# ---------------------------
st.subheader("üì• Download Sample Dataset")
try:
    sample_csv = pd.read_csv("synthetic_ar_data.csv").to_csv(index=False).encode("utf-8")
    st.download_button(
        label="‚¨áÔ∏è Download Sample Synthetic AR Dataset",
        data=sample_csv,
        file_name="synthetic_ar_data.csv",
        mime="text/csv"
    )
except Exception:
    st.warning("‚ö†Ô∏è Sample dataset not found in repo. Please upload your own CSV.")
